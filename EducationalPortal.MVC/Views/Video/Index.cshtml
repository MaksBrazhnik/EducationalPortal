@model EducationalPortal.Domain.DTOs.VideoListDTO

@{
    ViewData["Title"] = "Index";
}

<h1>Videos</h1>

<form asp-controller="Video" asp-action="Index">
    <p>
        Title: <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <tr><th>Name</th><th>Length</th><th>Quality</th></tr>
    @foreach (var item in Model.Videos)
    {
        <tr>
            <td>@item.Name</td>
            <td>@item.Length</td>
            <td>@item.Quality</td>
            <td>
                <a class="btn btn-primary" asp-action="UpdateVideo" asp-controller="Video" asp-route-id="@item.Id">Change</a>
            </td>
            <td>
                <form asp-controller="Video" asp-action="DeleteVideo" method="post" asp-route-id="@item.Id">
                    <input type="submit" class="btn btn-primary" value="Delete" />
                </form>
            </td>
        </tr>
    }
</table>
<div class="row">
    <div class="col-10">
        @if (Model.PageViewModel.HasPreviousPage)
        {
            <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn  btn-outline-dark">
                <i class="glyphicon glyphicon-chevron-left"></i>
                Previous
            </a>
        }
        @if (Model.PageViewModel.HasNextPage)
        {
            <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-sortorder="@(Model.SortViewModel.Current)"
           class="btn btn-outline-dark">
                Next
                <i class="glyphicon glyphicon-chevron-right"></i>
            </a>
        }
    </div>
</div>
<a class="btn btn-primary" asp-action="AddVideo">Create video</a>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }